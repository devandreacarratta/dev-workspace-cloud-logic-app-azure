{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Condition": {
                "actions": {
                    "Copy_file": {
                        "inputs": {
                            "headers": {
                                "ReadFileMetadataFromServer": true
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['ftp']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/datasets/default/copyFile",
                            "queries": {
                                "destination": "/images/@{variables('fileName')}",
                                "overwrite": true,
                                "queryParametersSingleEncoded": true,
                                "source": "@variables('blobFilePublicUrl')"
                            }
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "else": {
                    "actions": {
                        "Delete_blob_(V2)": {
                            "inputs": {
                                "headers": {
                                    "SkipDeleteIfFileNotFoundOnServer": false
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['Path']))}"
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        }
                    }
                },
                "expression": {
                    "or": [
                        {
                            "endsWith": [
                                "@variables('fileName')",
                                "jpg"
                            ]
                        },
                        {
                            "endsWith": [
                                "@variables('fileName')",
                                "png"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "blobFilePublicUrl",
                            "type": "string",
                            "value": "@{concat('https://liveeventstorage.blob.core.windows.net/images/',variables('fileName'))}"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_-_fileName": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_variable_-_fileName": {
                "inputs": {
                    "variables": [
                        {
                            "name": "fileName",
                            "type": "string",
                            "value": "@triggerBody()?['Name']"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "When_a_blob_is_added_or_modified_(properties_only)_(V2)": {
                "evaluatedRecurrence": {
                    "frequency": "Minute",
                    "interval": 3
                },
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureblob']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/triggers/batch/onupdatedfile",
                    "queries": {
                        "checkBothCreatedAndModifiedDateTime": false,
                        "folderId": "JTJmaW1hZ2Vz",
                        "maxFileCount": 1
                    }
                },
                "metadata": {
                    "JTJmaW1hZ2Vz": "/images"
                },
                "recurrence": {
                    "frequency": "Minute",
                    "interval": 3
                },
                "splitOn": "@triggerBody()",
                "type": "ApiConnection"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azureblob": {
                    "connectionId": "",
                    "connectionName": "azureblob-2",
                    "id": ""
                },
                "ftp": {
                    "connectionId": "",
                    "connectionName": "ftp",
                    "id": ""
                }
            }
        }
    }
}
